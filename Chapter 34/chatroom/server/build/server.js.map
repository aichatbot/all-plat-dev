{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/threads.js","webpack:///./src/api/users.js","webpack:///./src/config.js","webpack:///./src/jsx/App.jsx","webpack:///./src/jsx/DeleteButton.jsx","webpack:///./src/jsx/Footer.jsx","webpack:///./src/jsx/Header.jsx","webpack:///./src/jsx/HomePage.jsx","webpack:///./src/jsx/Introduction.jsx","webpack:///./src/jsx/LoginForm.jsx","webpack:///./src/jsx/ModifyButton.jsx","webpack:///./src/jsx/PostButton.jsx","webpack:///./src/jsx/ProfilePage.jsx","webpack:///./src/jsx/RegisterForm.jsx","webpack:///./src/jsx/ReplyForm.jsx","webpack:///./src/jsx/SettingForm.jsx","webpack:///./src/jsx/SettingPage.jsx","webpack:///./src/jsx/Thread.jsx","webpack:///./src/jsx/ThreadList.jsx","webpack:///./src/jsx/ThreadListPage.jsx","webpack:///./src/jsx/ThreadPage.jsx","webpack:///./src/jsx/UserInfo.jsx","webpack:///./src/model/Comment.js","webpack:///./src/model/Thread.js","webpack:///./src/model/User.js","webpack:///./src/server.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"body-parser\"","webpack:///external \"crypto\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"mongoose\"","webpack:///external \"multer\"","webpack:///external \"react\"","webpack:///external \"react-bootstrap\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-helmet\"","webpack:///external \"react-router-bootstrap\"","webpack:///external \"react-router-dom\"","webpack:///external \"socket.io\"","webpack:///external \"uuid\""],"names":["threadAPIs","app","post","req","res","body","username","token","title","content","status","json","message","User","findOne","user","newThread","author","thread","Thread","save","threads","push","tid","params","findById","newComment","target","comment","Comment","get","find","populate","data","comments","patch","String","_id","deleteMany","mongoose","Types","ObjectId","pull","remove","upload","multer","dest","userAPIs","users","password","confirmpass","passwordCryp","Crypto","createHash","update","digest","newUser","newuser","tokenstr","uuid","v4","single","description","file","avatar","filename","HOST","PORT","DOMAIN","userContext","createContext","setUser","auth","setAuth","App","useState","authenticate","JSON","parse","localStorage","getItem","fetch","method","headers","stringify","result","ok","alert","useEffect","name","HomePage","ThreadListPage","ProfilePage","SettingPage","DeleteButton","props","history","handle","handleDelete","confirm","withRouter","Footer","Header","useContext","Avatar","color","logout","RegLogForm","mode","setMode","Demo","Slogan","Introduction","LoginForm","login","setItem","handleLogin","e","preventDefault","form","document","forms","loginForm","value","ModifyForm","setTitle","setContent","loadThread","ModifyButton","show","setShow","showModal","closeModal","modify","handleModify","modifyForm","PostForm","PostButton","loadThreads","handlePost","postForm","match","RegisterForm","register","handleRegister","registerForm","ReplyForm","reply","replyForm","handleReply","SettingForm","settings","setSettings","loadSettings","storage","setting","formData","FormData","append","querySelector","files","handleSetting","settingForm","TPart","CPart","floors","map","idx","Floor","UserCard","ContentCard","floor","Date","posttime","toLocaleString","Row","ThreadList","rows","ThreadListTable","setThreads","ThreadPage","setThread","setComments","ProfileInfo","ThreadsInfo","lines","UserInfo","getUser","CommentSchema","Schema","type","required","trim","now","SchemaTypes","ref","model","ThreadSchema","UserSchema","unique","DB","template","markup","helmet","meta","toString","serverRender","next","ReactDOMServer","renderToString","url","Helmet","renderStatic","send","connect","useNewUrlParser","useCreateIndex","err","console","log","express","use","bodyParser","server","http","Server","io","socketIO","listen","on","socket","rid","join","to","emit","unshift","length","pop"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","import mongoose from 'mongoose';\nimport User from '../model/User';\nimport Thread from '../model/Thread';\nimport Comment from '../model/Comment';\n\nconst threadAPIs = (app) => {\n  app.post(\n    '/api/threads', // 新增帖子\n    async (req, res) => {\n      try {\n        const {\n          username,\n          token,\n          title,\n          content,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有获取到用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有获取到身份凭证',\n          });\n        }\n        if (!title) {\n          return res.status(400).json({\n            message: '没有输入帖子标题',\n          });\n        }\n        if (!content) {\n          return res.status(400).json({\n            message: '没有输入帖子内容',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        const newThread = {\n          title,\n          content,\n          author: user,\n        };\n        const thread = new Thread(newThread);\n        await thread.save();\n        user.threads.push(thread);\n        await user.save();\n        return res.json({\n          message: '新增帖子成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.post(\n    '/api/comments/:tid', // 新增回复\n    async (req, res) => {\n      try {\n        const {\n          tid,\n        } = req.params;\n        const {\n          username,\n          token,\n          content,\n        } = req.body;\n        if (!tid) {\n          return res.status(400).json({\n            message: '没有输入帖子ID',\n          });\n        }\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有输入身份凭证',\n          });\n        }\n        if (!content) {\n          return res.status(400).json({\n            message: '没有输入回复内容',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        const thread = await Thread.findById(tid);\n        if (!thread) {\n          return res.status(400).json({\n            message: '该帖子不存在',\n          });\n        }\n        const newComment = {\n          content,\n          author: user,\n          target: tid,\n        };\n        const comment = new Comment(newComment);\n        await comment.save();\n        return res.json({\n          message: '新增回复成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.get(\n    '/api/threads',\n    async (req, res) => {\n      try {\n        const threads = await Thread.find()\n          .populate('author', 'username avatar');\n        return res.json({\n          data: threads,\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.get(\n    '/api/threads/:tid',\n    async (req, res) => {\n      try {\n        const {\n          tid,\n        } = req.params;\n        if (!tid) {\n          return res.status(400).json({\n            message: '没有输入帖子ID',\n          });\n        }\n        const thread = await Thread.findById(tid)\n          .populate('author', 'username description avatar');\n        if (!thread) {\n          return res.status(400).json({\n            message: '该帖子不存在',\n          });\n        }\n        const comments = await Comment.find({ target: tid })\n          .populate('author', 'username avatar description');\n        return res.json({\n          data: { thread, comments },\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.patch(\n    '/api/threads/:tid',\n    async (req, res) => {\n      try {\n        const {\n          tid,\n        } = req.params;\n        const {\n          username,\n          token,\n          title,\n          content,\n        } = req.body;\n        if (!tid) {\n          return res.status(400).json({\n            message: '没有获取到帖子ID',\n          });\n        }\n        if (!username) {\n          return res.status(400).json({\n            message: '没有获取到用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有输入token',\n          });\n        }\n        if (!title) {\n          return res.status(400).json({\n            message: '没有输入修改标题',\n          });\n        }\n        if (!content) {\n          return res.status(400).json({\n            message: '没有输入修改内容',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        const thread = await Thread.findById(tid);\n        if (!thread) {\n          return res.status(400).json({\n            message: '该帖子不存在',\n          });\n        }\n        if (String(user._id) !== String(thread.author)) {\n          return res.status(400).json({\n            message: '你不是该贴的作者',\n          });\n        }\n        thread.title = title;\n        thread.content = content;\n        await thread.save();\n        return res.json({\n          message: '修改帖子内容成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.delete(\n    '/api/threads/:tid',\n    async (req, res) => {\n      try {\n        const {\n          tid,\n        } = req.params;\n        if (!tid) {\n          return res.status(400).json({\n            message: '没有输入帖子ID',\n          });\n        }\n        const {\n          username,\n          token,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有获取到用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有获取到token',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        const thread = await Thread.findById(tid);\n        if (!thread) {\n          return res.status(400).json({\n            message: '该帖子不存在',\n          });\n        }\n        if (String(user._id) !== String(thread.author)) {\n          return res.status(400).json({\n            message: '你不是该贴的作者',\n          });\n        }\n        await Comment.deleteMany({\n          target: mongoose.Types.ObjectId(tid),\n        });\n        user.threads.pull(thread);\n        await user.save();\n        await thread.remove();\n        return res.json({\n          message: '删除帖子成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n};\n\nexport default threadAPIs;\n","import Crypto from 'crypto';\nimport uuid from 'uuid';\nimport multer from 'multer';\n\nimport User from '../model/User';\n\nconst upload = multer({\n  dest: './static/upload',\n});\n\nconst userAPIs = (app) => {\n  app.get('/api/users', async (req, res) => {\n    try {\n      const users = await User.find();\n      return res.json({\n        data: users,\n      });\n    } catch (e) {\n      return res.status(400).json({\n        message: e.message,\n      });\n    }\n  });\n\n  app.post(\n    '/api/users',\n    async (req, res) => {\n      try {\n        const {\n          username,\n          password,\n          confirmpass,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!password) {\n          return res.status(400).json({\n            message: '没有输入密码',\n          });\n        }\n        if (!confirmpass) {\n          return res.status(400).json({\n            message: '没有输入确认密码',\n          });\n        }\n        if (password !== confirmpass) {\n          return res.status(400).json({\n            message: '密码与确认密码不一致',\n            data: 'confirmpass',\n          });\n        }\n        const user = await User.findOne({\n          username,\n        });\n        if (user) {\n          return res.status(400).json({\n            message: '该用户名已被使用',\n          });\n        }\n        const passwordCryp = Crypto.createHash('sha1').update(password).digest('hex');// 使用sha1算法给密码加密\n        const newUser = {\n          username,\n          password: passwordCryp,\n        };\n        const newuser = new User(newUser);\n        await newuser.save();\n        return res.json({\n          message: '新增用户成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.post(\n    '/api/users/login',\n    async (req, res) => {\n      try {\n        const {\n          username,\n          password,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!password) {\n          return res.status(400).json({\n            message: '没有输入密码',\n          });\n        }\n        const passwordCryp = Crypto.createHash('sha1').update(password).digest('hex');// 加密密码\n        const user = await User.findOne({\n          username,\n        });// 根据用户名查找用户\n        if (!user) { // 如果数据库里没有这个用户\n          return res.status(400).json({\n            message: '该用户不存在',\n          });\n        }\n        if (user.password !== passwordCryp) { // 如果用户的密码和数据库不一致\n          return res.status(400).json({\n            message: '密码错误，请重新输入',\n          });\n        }\n        const tokenstr = uuid.v4();// 生成标识符\n        const token = Crypto.createHash('sha1').update(tokenstr).digest('hex');// 加密标识符\n        user.token = token;// 将用户的token修改为当前加密凭证\n        await user.save();// 保存token到数据库\n        return res.json({\n          message: '成功登陆',\n          data: {\n            username: user.username,\n            token: user.token,\n          },\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.post(\n    '/api/users/auth',\n    async (req, res) => {\n      try {\n        const {\n          username,\n          token,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有输入token',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        user.password = null;\n        user.token = null;\n        return res.json({\n          message: '成功验证',\n          data: user,\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.post(\n    '/api/users/logout',\n    async (req, res) => {\n      try {\n        const {\n          username,\n          token,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有输入token',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        user.token = null;\n        await user.save();\n        return res.json({\n          message: '退出成功',\n        });\n      } catch (e) {\n        return res.status(400).json({\n          message: e.message,\n        });\n      }\n    },\n  );\n\n  app.patch(\n    '/api/users',\n    upload.single('avatar'),\n    async (req, res) => {\n      try {\n        const {\n          username, token, description,\n        } = req.body;\n        if (!username) {\n          return res.status(400).json({\n            message: '没有输入用户名',\n          });\n        }\n        if (!token) {\n          return res.status(400).json({\n            message: '没有输入token',\n          });\n        }\n        const user = await User.findOne({\n          username,\n          token,\n        });\n        if (!user) {\n          return res.status(400).json({\n            message: 'token已过期，请重新登陆',\n          });\n        }\n        if (req.file) {\n          user.avatar = req.file.filename;\n        }\n        user.description = description;\n        await user.save();\n        return res.json({ message: '修改用户资料成功' });\n      } catch (e) {\n        return res.status(400).json({ message: e.message });\n      }\n    },\n  );\n\n  app.get('/api/users/:username', async (req, res) => {\n    try {\n      const {\n        username,\n      } = req.params;\n      if (!username) {\n        return res.status(400).json({\n          message: '没有输入用户名',\n        });\n      }\n      const user = await User.findOne({ username })\n        .populate('threads', 'title posttime');\n      if (!user) {\n        return res.status(400).json({\n          message: '该用户不存在',\n        });\n      }\n      user.password = null;\n      user.token = null;\n      return res.json({\n        data: user,\n      });\n    } catch (e) {\n      return res.status(400).json({\n        message: e.message,\n      });\n    }\n  });\n};\n\nexport default userAPIs;\n","export const HOST = 'http://10.0.1.196'\nexport const PORT = 3000;\nexport const DOMAIN = 'BBS';\n","import React, { createContext, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Header from './Header';\nimport Footer from './Footer';\nimport HomePage from './HomePage';\nimport ThreadListPage from './ThreadListPage';\nimport ProfilePage from './ProfilePage';\nimport SettingPage from './SettingPage';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst userContext = createContext({\n  user: {},\n  setUser: () => { },\n  auth: false,\n  setAuth: () => { },\n});\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [auth, setAuth] = useState(false);\n  const authenticate = async () => {\n    try {\n      const body = await JSON.parse(localStorage.getItem(DOMAIN));\n      const res = await fetch(`${HOST}:${PORT}/api/users/auth`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setUser(result.data);\n        setAuth(true);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      throw err;\n    }\n  };\n  useEffect(() => {\n    authenticate();\n  }, []);\n  return (\n    <userContext.Provider value={{\n      user, setUser, auth, setAuth,\n    }}\n    >\n      <Helmet\n        titleTemplate=\"%s | xxBBS —— 连接你和我\"\n        meta={[\n          { name: 'charset', content: 'utf-8' },\n          { name: 'description', content: '全世界最不为人所知的电子留言板' },\n        ]}\n      />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/threads\" component={ThreadListPage} />\n        <Route path=\"/profile/:username\" component={ProfilePage} />\n        <Route path=\"/setting\" component={SettingPage} />\n      </Switch>\n      <Footer />\n    </userContext.Provider>\n  );\n};\n\nexport { userContext };\nexport default App;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst DeleteButton = (props) => {\n  const { tid, history } = props;\n  const handle = async (body) => {\n    try {\n      const res = await fetch(\n        `${HOST}:${PORT}/api/threads/${tid}`,\n        {\n          method: 'DELETE',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body),\n        },\n      );\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        history.push('/threads');\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleDelete = async () => {\n    if (confirm('确认删除该贴子吗？')) {\n      const { username, token } = JSON.parse(localStorage.getItem(DOMAIN));\n      const body = { username, token, tid };\n      handle(body);\n    }\n  };\n  return (\n    <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete()}>删除</Button>\n  );\n};\n\nexport default withRouter(DeleteButton);\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"mt-3\">\n    <center>\n            Copyright &copy; 2019 xxBBs\n      <br />\n            All Rights Reserved\n    </center>\n  </footer>\n);\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { HOST, PORT, DOMAIN } from '../config';\nimport { userContext } from './App';\n\nconst Header = (props) => {\n  const { history } = props;\n  const {\n    user, setUser, auth, setAuth,\n  } = useContext(userContext);\n  const Avatar = () => (\n    <div>\n      <img\n        src={user.avatar ? `/upload/${user.avatar}` : '/img/avatar.png'}\n        alt=\"头像\"\n        width={32}\n        height={32}\n        className=\"rounded\"\n      />\n      <span style={{ color: 'white' }} onClick={() => logout()}>  退出</span>\n    </div>\n  );\n  const logout = async () => {\n    try {\n      const data = JSON.parse(await localStorage.getItem(DOMAIN));\n      const res = await fetch(`${HOST}:${PORT}/api/users/logout`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        setAuth(false);\n        setUser({});\n        history.push('/');\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      throw err;\n    }\n  };\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#\">BBS</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to=\"/home/\">\n            <Nav.Link>首页</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/threads/\">\n            <Nav.Link>帖子</Nav.Link>\n          </LinkContainer>\n          {auth\n            ? (\n              <NavDropdown title=\"个人中心\" id=\"basic-nav-dropdown\">\n                <LinkContainer to={`/profile/${user.username}`}>\n                  <NavDropdown.Item href=\"#\">个人信息</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/setting/\">\n                  <NavDropdown.Item href=\"#\">修改信息</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n            )\n            : null}\n        </Nav>\n        <div className=\"ml-auto\">\n          {auth ? <Avatar /> : null}\n        </div>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default withRouter(Header);\n","import React, { useState, useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Container, Row, Col, Tabs, Tab,\n} from 'react-bootstrap';\nimport { Demo, Slogan } from './Introduction';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport { userContext } from './App';\n\n\nconst RegLogForm = () => {\n  const [mode, setMode] = useState('login');\n  return (\n    <Tabs\n      id=\"homeTabs\"\n      activeKey={mode}\n      onSelect={mode => setMode(mode)}\n    >\n      <Tab eventKey=\"login\" title=\"登陆\">\n        <LoginForm />\n      </Tab>\n      <Tab eventKey=\"register\" title=\"注册\">\n        <RegisterForm />\n      </Tab>\n    </Tabs>\n  );\n};\n\nconst HomePage = () => {\n  const { auth } = useContext(userContext);\n  return (\n    <Container fluid>\n      <Helmet title=\"首页\" />\n      <Row>\n        <Col sm={12} md={7} className=\"pr-1\">\n          <Demo />\n        </Col>\n        {auth\n          ? (\n            <Col sm={12} md={5} className=\"pl-0 d-flex align-items-stretch\">\n              <Slogan />\n            </Col>\n          )\n          : <Col sm={12} md={5} className=\"pl-0\"><RegLogForm /></Col>\n        }\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Carousel, Jumbotron } from 'react-bootstrap';\n\nconst Demo = () => (\n  <Carousel>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src=\"/img/demo1.jpeg\"\n        alt=\"First slide\"\n      />\n      <Carousel.Caption>\n        <h3>夕阳</h3>\n        <p>一同欣赏美景</p>\n      </Carousel.Caption>\n    </Carousel.Item>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src=\"/img/demo2.jpeg\"\n        alt=\"Third slide\"\n      />\n      <Carousel.Caption>\n        <h3>白云</h3>\n        <p>一同欣赏美景</p>\n      </Carousel.Caption>\n    </Carousel.Item>\n    <Carousel.Item>\n      <img\n        className=\"d-block w-100\"\n        src=\"/img/demo3.jpeg\"\n        alt=\"Third slide\"\n      />\n      <Carousel.Caption>\n        <h3>海滨</h3>\n        <p>一同欣赏美景</p>\n      </Carousel.Caption>\n    </Carousel.Item>\n  </Carousel>\n);\n\nconst Slogan = () => (\n  <Jumbotron className=\"flex-fill m-0\">\n    <h1>xxBBS</h1>\n    <p>\n      欢迎来到xxBBS系统。\n      <br />\n      请畅所欲言！\n    </p>\n  </Jumbotron>\n);\n\nconst Introduction = () => (\n  <div>\n    <Demo />\n    <Slogan />\n  </div>\n);\n\nexport { Demo, Slogan };\nexport default Introduction;\n","import React, { useContext } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { userContext } from './App';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst LoginForm = () => {\n  const { setUser, setAuth } = useContext(userContext);\n  const login = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/users/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        const data = { username: result.data.username, token: result.data.token };\n        await localStorage.setItem(DOMAIN, JSON.stringify(data));\n        setAuth(true);\n        setUser({ username: result.data.username });\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      throw err.message;\n    }\n  };\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const form = document.forms.loginForm;\n    const username = form.username.value;\n    const password = form.password.value;\n    const body = { username, password };\n    login(body);\n  };\n  return (\n    <Form id=\"loginForm\">\n      <Form.Group controlId=\"username\">\n        <Form.Label>用户名</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"请输入用户名\" />\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>密码</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"请输入密码\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={e => handleLogin(e)}>\n                登陆\n      </Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Modal } from 'react-bootstrap';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst ModifyForm = (props) => {\n  const { tid } = props;\n  const [title, setTitle] = useState([]);\n  const [content, setContent] = useState([]);\n  const loadThread = async () => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/threads/${tid}`, { method: 'GET' });\n      const result = await res.json();\n      if (res.ok) {\n        setTitle(result.data.thread.title);\n        setContent(result.data.thread.content);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    loadThread();\n  }, []);\n  return (\n    <Form id=\"modifyForm\">\n      <Form.Group controlId=\"title\">\n        <Form.Label>标题</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"请输入帖子标题\" defaultValue={title} />\n      </Form.Group>\n      <Form.Group controlId=\"content\">\n        <Form.Label>内容</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" defaultValue={content} />\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst ModifyButton = (props) => {\n  const { tid, loadThread } = props;\n  const [show, setShow] = useState(false);\n  const showModal = () => setShow(true);\n  const closeModal = () => setShow(false);\n  const modify = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/threads/${tid}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        closeModal();\n        loadThread();\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleModify = async () => {\n    const { username, token } = JSON.parse(await localStorage.getItem(DOMAIN));\n    const form = document.forms.modifyForm;\n    const title = form.title.value;\n    const content = form.content.value;\n    const body = {\n      username, token, title, content,\n    };\n    modify(body);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outline-warning\" size=\"sm\" onClick={() => showModal()}>\n                修改\n      </Button>\n      <Modal show={show} onHide={() => closeModal()}>\n        <Modal.Header closeButton>\n          <Modal.Title>修改帖子</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ModifyForm tid={tid} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => closeModal()}>\n                        关闭\n          </Button>\n          <Button variant=\"primary\" onClick={() => handleModify()}>\n                        提交\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModifyButton;\n","import React, { useState } from 'react';\nimport { Form, Button, Modal } from 'react-bootstrap';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst PostForm = () => (\n  <Form id=\"postForm\">\n    <Form.Group controlId=\"title\">\n      <Form.Label>标题</Form.Label>\n      <Form.Control type=\"text\" placeholder=\"请输入帖子标题\" />\n    </Form.Group>\n    <Form.Group controlId=\"content\">\n      <Form.Label>内容</Form.Label>\n      <Form.Control as=\"textarea\" rows=\"3\" />\n    </Form.Group>\n  </Form>\n);\n\nconst PostButton = (props) => { // 新增props\n  const { loadThreads } = props;// 新增\n  const [show, setShow] = useState(false);\n  const showModal = () => setShow(true);\n  const closeModal = () => setShow(false);\n  const post = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/threads`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        closeModal();\n        loadThreads();\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handlePost = async () => {\n    const { username, token } = JSON.parse(await localStorage.getItem(DOMAIN));\n    const form = document.forms.postForm;\n    const title = form.title.value;\n    const content = form.content.value;\n    const body = {\n      username, token, title, content,\n    };\n    post(body);\n  };\n  return (\n    <div>\n      <Button variant=\"outline-success\" size=\"sm\" onClick={() => showModal()}>\n                发布新帖\n      </Button>\n      <Modal show={show} onHide={() => closeModal()}>\n        <Modal.Header closeButton>\n          <Modal.Title>发布新帖</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PostForm />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => closeModal()}>\n                        关闭\n          </Button>\n          <Button variant=\"primary\" onClick={() => handlePost()}>\n                        提交\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PostButton;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport UserInfo from './UserInfo';\n\nconst ProfilePage = (props) => {\n  const { username } = props.match.params;\n  return (\n    <Container>\n      <Helmet title={`${username}的个人信息`} />\n      <UserInfo username={username} />\n    </Container>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useContext } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { userContext } from './App';\nimport { HOST, PORT } from '../config';\n\nconst RegisterForm = () => {\n  const { setAuth } = useContext(userContext);\n  const login = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/users/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        const data = { username: result.data.username, token: result.data.token };\n        await localStorage.setItem(DOMAIN, JSON.stringify(data));\n        setAuth(true);\n        setUser({ username: result.data.username });\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      throw err.message;\n    }\n  };\n  const register = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/users`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        login(body);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleRegister = (e) => {\n    e.preventDefault();\n    const form = document.forms.registerForm;\n    const username = form.username.value;\n    const password = form.password.value;\n    const confirmpass = form.confirmpass.value;\n    const body = { username, password, confirmpass };\n    register(body);\n  };\n  return (\n    <Form id=\"registerForm\">\n      <Form.Group controlId=\"username\">\n        <Form.Label>用户名</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"请输入用户名\" />\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>密码</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"请输入密码\" />\n      </Form.Group>\n      <Form.Group controlId=\"confirmpass\">\n        <Form.Label>确认密码</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"请再输入一遍密码\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={e => handleRegister(e)}>\n                注册\n      </Button>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst ReplyForm = (props) => {\n  const { tid, loadThread } = props;\n  const reply = async (body) => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/comments/${tid}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        loadThread();\n        document.forms.replyForm.content.value = '';\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleReply = async (e) => {\n    e.preventDefault();\n    const { username, token } = JSON.parse(await localStorage.getItem(DOMAIN));\n    const form = document.forms.replyForm;\n    const content = form.content.value;\n    const body = { username, token, content };\n    reply(body);\n  };\n  return (\n    <Form id=\"replyForm\" className=\"p-3\">\n      <Form.Group controlId=\"content\">\n        <Form.Label>回复</Form.Label>\n        <Form.Control as=\"textarea\" rows=\"3\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={e => handleReply(e)}>\n                提交\n      </Button>\n    </Form>\n  );\n};\n\nexport default ReplyForm;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { HOST, PORT, DOMAIN } from '../config';\n\nconst SettingForm = () => {\n  const [settings, setSettings] = useState([]);\n  const loadSettings = async () => {\n    try {\n      const storage = await localStorage.getItem(DOMAIN);\n      const { username, token } = JSON.parse(storage);\n      const res = await fetch(`${HOST}:${PORT}/api/users/${username}`, { method: 'GET' });\n      const result = await res.json();\n      if (res.ok) {\n        setSettings(result.data);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    loadSettings();\n  }, []);\n  const setting = async (body) => {\n    try {\n      const { username, token } = JSON.parse(await localStorage.getItem(DOMAIN));\n      const { description } = body;\n      const formData = new FormData();\n      await formData.append('username', username);\n      await formData.append('token', token);\n      await formData.append('description', description);\n      await formData.append('avatar', document.querySelector('#uploader').files[0]);\n      const res = await fetch(`${HOST}:${PORT}/api/users`, {\n        method: 'PATCH',\n        body: formData,\n      });\n      const result = await res.json();\n      if (res.ok) {\n        alert(result.message);\n        loadSettings();\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const handleSetting = (e) => {\n    e.preventDefault();\n    const form = document.forms.settingForm;\n    const description = form.description.value;\n    const body = { description };\n    setting(body);\n  };\n  return (\n    <Form id=\"settingForm\">\n      <Form.Group controlId=\"description\">\n        <Form.Label>个人描述</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"请输入个人描述\" defaultValue={settings.description} />\n      </Form.Group>\n      <Form.Group controlId=\"uploader\">\n        <Form.Label>头像</Form.Label>\n        <br />\n        <img\n          src={settings.avatar ? `/upload/${settings.avatar}` : '/img/avatar.png'}\n          alt=\"头像\"\n          className=\"rounded img-thumbnail\"\n        />\n        <Form.Control type=\"file\" placeholder=\"请上传头像\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={e => handleSetting(e)}>\n                确定\n      </Button>\n    </Form>\n  );\n};\n\nexport default SettingForm;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SettingForm from './SettingForm';\n\nconst SettingPage = () => (\n  <Container>\n    <Row className=\"d-flex justify-content-center\">\n      <Col sm={12} md={6}>\n        <SettingForm />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default SettingPage;\n","import React, { useEffect } from 'react';\nimport { Media } from 'react-bootstrap';\n\nconst TPart = (props) => {\n  const { thread } = props;\n  if (!thread.author) return null;\n  return (\n    <Media className=\"rounded border p-3 mb-3 mt-0\">\n      <UserCard author={thread.author} />\n      <Media.Body>\n        <ContentCard floor={thread} />\n      </Media.Body>\n    </Media>\n  );\n};\n\nconst CPart = (props) => {\n  const { comments } = props;\n  const floors = comments.map((comment, idx) => <Floor key={idx} comment={comment} />);\n  return (\n    <div>\n      {floors}\n    </div>\n  );\n};\n\nconst Floor = (props) => {\n  const { comment } = props;\n  return (\n    <Media className=\"rounded border p-3 mb-3\">\n      <UserCard author={comment.author} />\n      <Media.Body>\n        <ContentCard floor={comment} />\n      </Media.Body>\n    </Media>\n  );\n};\n\nconst UserCard = (props) => {\n  const { author } = props;\n  return (\n    <div>\n      <img\n        width={64}\n        height={64}\n        className=\"mr-3 img-thumbnail round\"\n        src={author.avatar ? `/upload/${author.avatar}` : '/img/avatar.png'}\n        alt={author.username}\n      />\n      <br />\n      <center>{author.username}</center>\n    </div>\n  );\n};\n\nconst ContentCard = (props) => {\n  const { floor } = props;\n  return (\n    <div>\n      <h5>{floor.title}</h5>\n      <p>\n        {floor.content}\n      </p>\n      <p className=\"d-flex justify-content-end text-muted\">\n        <small>\n          发表于\n          {' '}\n          {new Date(floor.posttime).toLocaleString()}\n        </small>\n      </p>\n      <hr />\n      <p className=\"d-flex justify-content-end m-0\">\n        <small>\n          {floor.author.description}\n        </small>\n      </p>\n    </div>\n  );\n};\n\nconst Thread = (props) => {\n  const { thread, comments, loadThread } = props;\n  useEffect(() => {\n    loadThread();\n  }, []);\n  return (\n    <div>\n      <TPart thread={thread} />\n      <CPart comments={comments} />\n    </div>\n  );\n};\n\nexport default Thread;\n","import React, { useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Row = (props) => {\n  const { thread } = props;\n  return (\n    <tr>\n      <td>\n        <Link to={`/threads/${thread._id}`}>{thread.title}</Link>\n      </td>\n      <td>{thread.author.username}</td>\n      <td>{new Date(thread.posttime).toLocaleString()}</td>\n    </tr>\n  );\n};\n\nconst ThreadList = (props) => {\n  const { loadThreads, threads } = props;\n  useEffect(() => {\n    loadThreads();\n  }, []);\n  const rows = threads.map((thread, idx) => (\n    <Row key={idx} thread={thread} />\n  ));\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>标题</th>\n          <th>作者</th>\n          <th>发布时间</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows}\n      </tbody>\n    </Table>\n  );\n};\n\n\nexport default ThreadList;\n","import React, { useState, useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { userContext } from './App';\nimport PostButton from './PostButton';\nimport ThreadList from './ThreadList';\nimport { HOST, PORT } from '../config';\nimport ThreadPage from './ThreadPage';\n\nconst ThreadListTable = () => {\n  const [threads, setThreads] = useState([]);\n  const { auth } = useContext(userContext);\n  const loadThreads = async () => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/threads`, { method: 'GET' });\n      const result = await res.json();\n      if (res.ok) {\n        setThreads(result.data);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return (\n    <Container>\n      <Helmet title=\"帖子列表\" />\n      {auth\n        ? <PostButton loadThreads={loadThreads} />\n        : null}\n      <ThreadList loadThreads={loadThreads} threads={threads} />\n    </Container>\n  );\n};\n\nconst ThreadListPage = () => (\n  <Switch>\n    <Route exact path=\"/threads\" component={ThreadListTable} />\n    <Route exact path=\"/threads/:tid\" component={ThreadPage} />\n  </Switch>\n);\n\nexport default ThreadListPage;\n","import React, { useState, useContext } from 'react';\nimport { Container, Row, ButtonGroup } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { userContext } from './App';\nimport Thread from './Thread';\nimport ReplyForm from './ReplyForm';\nimport ModifyButton from './ModifyButton';\nimport DeleteButton from './DeleteButton';\nimport { HOST, PORT } from '../config';\n\nconst ThreadPage = (props) => {\n  const { user, auth } = useContext(userContext);\n  const { tid } = props.match.params;\n  const [thread, setThread] = useState({});\n  const [comments, setComments] = useState([]);\n  const loadThread = async () => {\n    try {\n      const res = await fetch(`${HOST}:${PORT}/api/threads/${tid}`);\n      const result = await res.json();\n      if (res.ok) {\n        setThread(result.data.thread);\n        setComments(result.data.comments);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return (\n    <Container>\n      <Helmet title={thread.title} />\n      {thread.author && user.username === thread.author.username\n        ? (\n          <Row className=\"m-0\">\n            <ButtonGroup className=\"ml-auto\">\n              <ModifyButton tid={tid} loadThread={loadThread} />\n              <DeleteButton tid={tid} />\n            </ButtonGroup>\n          </Row>\n        )\n        : null}\n      <Thread tid={tid} thread={thread} comments={comments} loadThread={loadThread} />\n      {auth\n        ? <ReplyForm tid={tid} loadThread={loadThread} />\n        : null}\n    </Container>\n  );\n};\n\nexport default ThreadPage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Card, ListGroup, Row, Col,\n} from 'react-bootstrap';\nimport { HOST, PORT } from '../config';\n\nconst ProfileInfo = (props) => {\n  const { user } = props;\n  return (\n    <Card>\n      <Card.Header>个人信息</Card.Header>\n      <Card.Img\n        variant=\"top\"\n        src={user.avatar ? `/upload/${user.avatar}` : '/img/avatar.png'}\n        className=\"rounded img-thumbnail\"\n      />\n      <Card.Body>\n        <Card.Title>用户名</Card.Title>\n        <Card.Text>{user.username}</Card.Text>\n        <Card.Title>个人描述</Card.Title>\n        <Card.Text>{user.description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst ThreadsInfo = (props) => {\n  const { threads } = props;\n  const lines = threads.map((thread, idx) => (\n    <ListGroup.Item key={idx} className=\"d-flex justify-content-between\">\n      <span>{thread.title}</span>\n      <small className=\"text-muted\">\n        {new Date(thread.posttime).toLocaleString()}\n      </small>\n    </ListGroup.Item>\n  ));\n  return (\n    <Card>\n      <Card.Header>发帖信息</Card.Header>\n      <ListGroup variant=\"flush\">\n        {lines}\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst UserInfo = (props) => {\n  const { username } = props;\n  const [user, setUser] = useState({});\n  const [threads, setThreads] = useState([]);\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const res = await fetch(\n          `${HOST}:${PORT}/api/users/${username}`,\n          { method: 'GET' },\n        );\n        const result = await res.json();\n        if (res.ok) {\n          setUser(result.data);\n          setThreads(result.data.threads);\n        }\n      } catch (err) {\n        alert(err.message);\n      }\n    };\n    getUser();\n  }, []);\n  return (\n    <Row>\n      <Col sm={12} md={4}>\n        <ProfileInfo user={user} />\n      </Col>\n      <Col sm={12} md={8}>\n        <ThreadsInfo threads={threads} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default UserInfo;\n","import mongoose from 'mongoose';\nimport User from './User';\n\nconst CommentSchema = new mongoose.Schema({\n  content: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  posttime: {\n    type: Date,\n    default: Date.now(),\n  },\n  author: {\n    type: mongoose.SchemaTypes.ObjectId,\n    required: true,\n    ref: 'User',\n  },\n  target: {\n    type: mongoose.SchemaTypes.ObjectId,\n    required: true,\n    ref: 'Thread',\n  },\n});\n\nconst Comment = mongoose.model('Comment', CommentSchema);\nexport default Comment;\n","import mongoose from 'mongoose';\nimport User from './User';\n\nconst ThreadSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  content: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  posttime: {\n    type: Date,\n    default: Date.now(),\n  },\n  author: {\n    type: mongoose.SchemaTypes.ObjectId,\n    required: true,\n    ref: 'User',\n  },\n});\n\nconst Thread = mongoose.model('Thread', ThreadSchema);\nexport default Thread;\n","import mongoose from 'mongoose';\nimport Thread from './Thread';\n\nconst UserSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  avatar: String,\n  description: {\n    type: String,\n    trim: true,\n  },\n  token: String,\n  threads: [{\n    type: mongoose.SchemaTypes.ObjectId,\n    ref: 'Thread',\n  }],\n});\n\nconst User = mongoose.model('User', UserSchema);\nexport default User;\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\nimport mongoose from 'mongoose';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { Helmet } from 'react-helmet';\nimport App from './jsx/App';\n\nimport http from 'http';\nimport socketIO from 'socket.io';\n\nimport userAPIs from './api/users';\nimport threadAPIs from './api/threads';\n\nconst DB = 'mongodb://localhost:27017/bbs';\n\nconst template = (markup, helmet) => (\n  `<!DOCTYPE html>\n    <html>\n      <head>\n        ${helmet.meta.toString()}\n        ${helmet.title.toString()}\n        <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\"/>\n      </head>\n      <body>\n        <div id=\"root\">${markup}</div>\n        <script src=\"/client.js\" async></script>\n      </body>\n    </html>`\n);\n\nconst serverRender = (req, res, next) => {\n  const markup = (\n    ReactDOMServer.renderToString(\n      <StaticRouter location={req.url} context={{}}>\n        <App />\n      </StaticRouter>,\n    )\n  );\n  const helmet = Helmet.renderStatic();\n  res.status(200).send(template(markup, helmet));\n  next();\n};\n\nmongoose.connect(\n  DB,\n  { useNewUrlParser: true, useCreateIndex: true },\n  (err) => {\n    if (err) throw err;\n    console.log('已连接到数据库...');\n\n    const app = express();\n    app.use(bodyParser.json());\n    app.use(express.static('static'));\n\n    userAPIs(app);\n    threadAPIs(app);\n\n    app.use(serverRender);\n\n    const server = http.Server(app);\n    const io = socketIO(server);\n    server.listen(3000);\n\n    const comments = []\n    io.on('connection', (socket) => {\n      socket.on('join', (data) => {\n        const { rid, username } = data;\n        socket.join(rid);\n        io.to(rid).emit('system', `${username}进入了房间`);\n        io.to(rid).emit('comments', comments);\n      });\n\n      socket.on('comments', (data) => {\n        const { comment, username, rid } = data;\n        comments.unshift({ comment, username, posttime: Date() });\n        if (comments.length > 30) comments.pop();\n        io.to(rid).emit('comments', comments);\n      });\n    });\n  },\n);\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"body-parser\");","module.exports = require(\"crypto\");","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"mongoose\");","module.exports = require(\"multer\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-helmet\");","module.exports = require(\"react-router-bootstrap\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"socket.io\");","module.exports = require(\"uuid\");"],"sourceRoot":""}